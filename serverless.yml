service: device-manager-backend

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  profile: ben-main
  stage: ${opt:stage, 'dev'}
  stackTags:
    Application: device-manager-backend
  tags:
    Application: device-manager-backend

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.devices-table-name}"

custom:
  devices-table-name: devices-${self:provider.stage}

functions:
  devices-api:
    name: ${self:service}-${self:provider.stage}-devices-api
    handler: devices-api.router
    timeout: 30
    events:
      - http:
          path: 'v1/{proxy+}'
          method: any
    environment:
      TABLE_NAME: ${self:custom.devices-table-name}


# you can add CloudFormation resource templates here
resources:
  Resources:
    DevicesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.devices-table-name}
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
